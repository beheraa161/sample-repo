Hard Link :
-----------
A hard link acts as a copy (mirrored) of the selected file. It accesses the data available in the original file.
If the earlier selected file is deleted, the hard link to the file will still contain the data of that file.

> can't support  cross file system boundaries (i.e. A hardlink can only work on the same filesystem),
> can't link directories,
has the same inode number and permissions of original file,
> permissions will be updated if we change the permissions of source file,
has the actual contents of original file, so that you still can view the contents, even if the original file moved or removed.


Soft Link :
-----------
A soft link (also known as Symbolic link) acts as a pointer or a reference to the file name. 
It does not access the data available in the original file. 
If the origional file is deleted, the soft link will be pointing to a file that does not exist anymore.


> can support cross file system,
> allows you to link between directories,
has different inode number and file permissions than original file,
> permissions will not be updated,
has only the path of the original file, not the contents.


>> How to create Soft Link or Symbolic Link

create an empty directory called "test"
 
# mkdir test

Change to the "test" directory:

#  cd test

  create a new file called source.file with some data as shown below

 # echo "Welcome to RamaNabami" > source.file


Let us view the data of the source.file.

 # cat source.file
Welcome to RamaNabami

create the a symbolic or soft link to the source.file.

# ln -s source.file softlink.file

>> check the inodes and permissions of softlink.file and source.file.

# ls -lia


How to create Hard Link : 
#############################
Create a file called source.file with some contents as shown below.

$ echo "Welcome to OSTechNix" >source.file

Let us verify the contents of the file.

$ cat source.file
Welcome to OSTechNix
The source.file has been created now.

Now, let us create the hard link to the source.file as shown below.

$ ln source.file hardlink.file

Create hard link
Check the contents of hardlink.file:

$ cat hardlink.file
Welcome to OSTechNix
You see the hardlink.file displays the same data as source.file.

Let us check the inode and permissions of hardlink.file and source.file.

$ ls -lia
Sample output:

total 16
11665675 drwxrwxr-x 2 sk sk 4096 Oct 17 11:58 .
4325378 drwxr-xr-x 37 sk sk 4096 Oct 17 11:39 ..
11665692 -rw-rw-r-- 2 sk sk 21 Oct 17 11:57 hardlink.file
11665692 -rw-rw-r-- 2 sk sk 21 Oct 17 11:57 source.file


Dangling Softlink:-
When a softlink file pointing to a missing origional file that time we can say dangling softlink.

When the origional file is deleted , softlink file no moere use.